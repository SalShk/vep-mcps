[build-system]
requires = ["hatchling>=1.25.0"]
build-backend = "hatchling.build"

[project]
name = "vep-parser-mcp"
version = "0.1.4"  # <-- bump to match your next tag
description = "Agent-friendly VEP parsing MCP tools with strict I/O contracts"
readme = "../README.md"
authors = [{ name = "Saleh Shekari" }]
license = { text = "MIT" }
requires-python = ">=3.11"
dependencies = [
    "pandas>=2.2.2,<2.3",
    "typer>=0.12.3,<0.13",       # pin Typer to avoid CLI/Click breakage
    "click>=8.1.7,<8.2",         # keep Click below 8.2 for Typer compat
    "rich>=13.7,<14",
    "jsonschema>=4.22,<5",
]

[project.scripts]
vep-filter-consequence-mane = "vep_parser_mcp.cli.filter_consequence_and_mane:cli"
vep-normalise-columns       = "vep_parser_mcp.cli.normalise_columns:cli"
vep-merge-gnomad-constraint = "vep_parser_mcp.cli.merge_gnomad_constraint:cli"
vep-parsing-overview        = "vep_parser_mcp.cli.parsing_overview:cli"
vep-overview                = "vep_parser_mcp.cli.parsing_overview:cli"  # <â€” alias
vep-prepare-pipeline        = "vep_parser_mcp.cli.prepare_pipeline:cli"


[project.optional-dependencies]
dev = [
    "pytest>=8.2,<9",
    "pytest-cov>=5,<6",
    "ruff>=0.6,<0.7",
    "black>=24.8,<25",
]

[tool.hatch.build.targets.wheel]
packages = ["src/vep_parser_mcp"]

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.ruff]
line-length = 100
target-version = "py312"
src = ["parser-mcp/src", "tests"]

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B"]
ignore = ["E501"]  # black handles long lines

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-q --maxfail=1"
testpaths = ["tests"]
